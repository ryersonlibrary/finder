/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */

import '@stencil/core';

declare global {
  namespace JSX {
    interface Element {}
    export interface IntrinsicElements {}
  }
  namespace JSXElements {}

  interface HTMLElement {
    componentOnReady?: () => Promise<this | null>;
  }

  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;

    forceUpdate(): void;
  }

  interface HTMLAttributes {}
}

import '@rula/web-components';
import '@stencil/router';
import '@stencil/state-tunnel';

import {
  Building,
  BuildingMap,
  Floor,
  FloorMap,
} from './interface.js';
import {
  SearchResult,
  SearchResultGroup,
} from './interface';
import {
  MatchResults,
} from '@stencil/router';

declare global {

  namespace StencilComponents {
    interface RulaDetailPanel {

    }
  }

  interface HTMLRulaDetailPanelElement extends StencilComponents.RulaDetailPanel, HTMLStencilElement {}

  var HTMLRulaDetailPanelElement: {
    prototype: HTMLRulaDetailPanelElement;
    new (): HTMLRulaDetailPanelElement;
  };
  interface HTMLElementTagNameMap {
    'rula-detail-panel': HTMLRulaDetailPanelElement;
  }
  interface ElementTagNameMap {
    'rula-detail-panel': HTMLRulaDetailPanelElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'rula-detail-panel': JSXElements.RulaDetailPanelAttributes;
    }
  }
  namespace JSXElements {
    export interface RulaDetailPanelAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface RulaDrawer {
      'open': boolean;
    }
  }

  interface HTMLRulaDrawerElement extends StencilComponents.RulaDrawer, HTMLStencilElement {}

  var HTMLRulaDrawerElement: {
    prototype: HTMLRulaDrawerElement;
    new (): HTMLRulaDrawerElement;
  };
  interface HTMLElementTagNameMap {
    'rula-drawer': HTMLRulaDrawerElement;
  }
  interface ElementTagNameMap {
    'rula-drawer': HTMLRulaDrawerElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'rula-drawer': JSXElements.RulaDrawerAttributes;
    }
  }
  namespace JSXElements {
    export interface RulaDrawerAttributes extends HTMLAttributes {
      'onDrawerClose'?: (event: CustomEvent) => void;
      'open'?: boolean;
    }
  }
}


declare global {

  namespace StencilComponents {
    interface RulaExpandableCard {
      'delay': number;
    }
  }

  interface HTMLRulaExpandableCardElement extends StencilComponents.RulaExpandableCard, HTMLStencilElement {}

  var HTMLRulaExpandableCardElement: {
    prototype: HTMLRulaExpandableCardElement;
    new (): HTMLRulaExpandableCardElement;
  };
  interface HTMLElementTagNameMap {
    'rula-expandable-card': HTMLRulaExpandableCardElement;
  }
  interface ElementTagNameMap {
    'rula-expandable-card': HTMLRulaExpandableCardElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'rula-expandable-card': JSXElements.RulaExpandableCardAttributes;
    }
  }
  namespace JSXElements {
    export interface RulaExpandableCardAttributes extends HTMLAttributes {
      'delay'?: number;
    }
  }
}


declare global {

  namespace StencilComponents {
    interface RulaFinder {

    }
  }

  interface HTMLRulaFinderElement extends StencilComponents.RulaFinder, HTMLStencilElement {}

  var HTMLRulaFinderElement: {
    prototype: HTMLRulaFinderElement;
    new (): HTMLRulaFinderElement;
  };
  interface HTMLElementTagNameMap {
    'rula-finder': HTMLRulaFinderElement;
  }
  interface ElementTagNameMap {
    'rula-finder': HTMLRulaFinderElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'rula-finder': JSXElements.RulaFinderAttributes;
    }
  }
  namespace JSXElements {
    export interface RulaFinderAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface RulaMapNav {
      'activeBuilding': Building;
      'activeFloor': Floor;
      'activeFloors': FloorMap;
      'allBuildings': BuildingMap;
    }
  }

  interface HTMLRulaMapNavElement extends StencilComponents.RulaMapNav, HTMLStencilElement {}

  var HTMLRulaMapNavElement: {
    prototype: HTMLRulaMapNavElement;
    new (): HTMLRulaMapNavElement;
  };
  interface HTMLElementTagNameMap {
    'rula-map-nav': HTMLRulaMapNavElement;
  }
  interface ElementTagNameMap {
    'rula-map-nav': HTMLRulaMapNavElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'rula-map-nav': JSXElements.RulaMapNavAttributes;
    }
  }
  namespace JSXElements {
    export interface RulaMapNavAttributes extends HTMLAttributes {
      'activeBuilding'?: Building;
      'activeFloor'?: Floor;
      'activeFloors'?: FloorMap;
      'allBuildings'?: BuildingMap;
      'onActiveBuildingChanged'?: (event: CustomEvent) => void;
      'onActiveFloorChanged'?: (event: CustomEvent) => void;
    }
  }
}


declare global {

  namespace StencilComponents {
    interface RulaSearchBox {
      'id': string;
      'searchResults': Array<SearchResult | SearchResultGroup>;
    }
  }

  interface HTMLRulaSearchBoxElement extends StencilComponents.RulaSearchBox, HTMLStencilElement {}

  var HTMLRulaSearchBoxElement: {
    prototype: HTMLRulaSearchBoxElement;
    new (): HTMLRulaSearchBoxElement;
  };
  interface HTMLElementTagNameMap {
    'rula-search-box': HTMLRulaSearchBoxElement;
  }
  interface ElementTagNameMap {
    'rula-search-box': HTMLRulaSearchBoxElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'rula-search-box': JSXElements.RulaSearchBoxAttributes;
    }
  }
  namespace JSXElements {
    export interface RulaSearchBoxAttributes extends HTMLAttributes {
      'id'?: string;
      'searchResults'?: Array<SearchResult | SearchResultGroup>;
    }
  }
}


declare global {

  namespace StencilComponents {
    interface ViewFaq {

    }
  }

  interface HTMLViewFaqElement extends StencilComponents.ViewFaq, HTMLStencilElement {}

  var HTMLViewFaqElement: {
    prototype: HTMLViewFaqElement;
    new (): HTMLViewFaqElement;
  };
  interface HTMLElementTagNameMap {
    'view-faq': HTMLViewFaqElement;
  }
  interface ElementTagNameMap {
    'view-faq': HTMLViewFaqElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'view-faq': JSXElements.ViewFaqAttributes;
    }
  }
  namespace JSXElements {
    export interface ViewFaqAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface ViewHome {

    }
  }

  interface HTMLViewHomeElement extends StencilComponents.ViewHome, HTMLStencilElement {}

  var HTMLViewHomeElement: {
    prototype: HTMLViewHomeElement;
    new (): HTMLViewHomeElement;
  };
  interface HTMLElementTagNameMap {
    'view-home': HTMLViewHomeElement;
  }
  interface ElementTagNameMap {
    'view-home': HTMLViewHomeElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'view-home': JSXElements.ViewHomeAttributes;
    }
  }
  namespace JSXElements {
    export interface ViewHomeAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface ViewMap {
      'match': MatchResults;
    }
  }

  interface HTMLViewMapElement extends StencilComponents.ViewMap, HTMLStencilElement {}

  var HTMLViewMapElement: {
    prototype: HTMLViewMapElement;
    new (): HTMLViewMapElement;
  };
  interface HTMLElementTagNameMap {
    'view-map': HTMLViewMapElement;
  }
  interface ElementTagNameMap {
    'view-map': HTMLViewMapElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'view-map': JSXElements.ViewMapAttributes;
    }
  }
  namespace JSXElements {
    export interface ViewMapAttributes extends HTMLAttributes {
      'match'?: MatchResults;
    }
  }
}

declare global { namespace JSX { interface StencilJSX {} } }
